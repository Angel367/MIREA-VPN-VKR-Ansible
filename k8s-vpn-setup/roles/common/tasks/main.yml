---
- name: Обновление репозиториев apt
  apt:
    update_cache: yes
    cache_valid_time: 3600

- name: Установка основных пакетов
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
      - software-properties-common
      - python3-pip
      - python3-setuptools
      - ntp
      - ntpdate
      - iptables
      - iptables-persistent
    state: present

- name: Отключение swap
  command: swapoff -a
  changed_when: false

- name: Удаление swap из /etc/fstab
  replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
    replace: '# \1'

- name: Обновление времени
  command: ntpdate time.nist.gov
  ignore_errors: yes

- name: Включить переадресацию IPv4
  sysctl:
    name: net.ipv4.ip_forward
    value: "1"
    state: present
    reload: yes

- name: Установка iptables правил
  template:
    src: iptables.j2
    dest: /etc/iptables/rules.v4
  notify:
    - Применить правила iptables

# Очистка существующих конфигураций Docker
- name: Удаление существующих конфигураций Docker
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /etc/apt/sources.list.d/docker.list
    - /etc/apt/sources.list.d/docker-ce.list
    - /etc/apt/keyrings/docker.gpg
    - /usr/share/keyrings/docker-archive-keyring.gpg

# Очистка существующих конфигураций Kubernetes
- name: Удаление существующих конфигураций Kubernetes
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /etc/apt/sources.list.d/kubernetes.list
    - /etc/apt/keyrings/kubernetes.gpg
    - /usr/share/keyrings/kubernetes-archive-keyring.gpg

# Установка Docker
- name: Создать директорию для ключей
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: 0755

- name: Установка ключа GPG для Docker
  shell: |
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
    chmod a+r /etc/apt/keyrings/docker.gpg
  args:
    creates: /etc/apt/keyrings/docker.gpg

- name: Добавление репозитория Docker
  shell: |
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  args:
    creates: /etc/apt/sources.list.d/docker.list

# Установка Kubernetes
- name: Установка ключа GPG для Kubernetes
  shell: |
    curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.26/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes.gpg
    chmod a+r /etc/apt/keyrings/kubernetes.gpg
  args:
    creates: /etc/apt/keyrings/kubernetes.gpg

- name: Добавление репозитория Kubernetes
  shell: |
    echo "deb [signed-by=/etc/apt/keyrings/kubernetes.gpg] https://pkgs.k8s.io/core:/stable:/v1.26/deb/ /" | sudo tee /etc/apt/sources.list.d/kubernetes.list > /dev/null
  args:
    creates: /etc/apt/sources.list.d/kubernetes.list

- name: Обновление кэша apt
  apt:
    update_cache: yes

- name: Установка Docker CE
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    state: present

- name: Настройка Docker для использования systemd
  copy:
    dest: /etc/docker/daemon.json
    content: |
      {
        "exec-opts": ["native.cgroupdriver=systemd"],
        "log-driver": "json-file",
        "log-opts": {
          "max-size": "100m"
        },
        "storage-driver": "overlay2"
      }
    mode: 0644
  register: docker_daemon_config

- name: Создание директории для Docker
  file:
    path: /etc/systemd/system/docker.service.d
    state: directory
    mode: 0755

- name: Перезапуск Docker при изменении конфигурации
  systemd:
    name: docker
    state: restarted
    daemon_reload: yes
  when: docker_daemon_config.changed

- name: Установка Kubernetes компонентов
  apt:
    name:
      - kubelet
      - kubeadm
      - kubectl
    state: present

- name: Зафиксировать версию Kubernetes пакетов
  dpkg_selections:
    name: "{{ item }}"
    selection: hold
  loop:
    - kubelet
    - kubeadm
    - kubectl

- name: Включение и запуск Docker
  systemd:
    name: docker
    state: started
    enabled: yes

- name: Включение и запуск kubelet
  systemd:
    name: kubelet
    state: started
    enabled: yes