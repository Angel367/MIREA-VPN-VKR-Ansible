---
- name: Клонирование репозитория Outline Server
  git:
    repo: https://github.com/Jigsaw-Code/outline-server.git
    dest: /tmp/outline-server
    version: "v{{ outline_version }}"

- name: Установка Outline Server
  command: bash -c "cd /tmp/outline-server/src/server && bash install_server.sh"
  args:
    creates: /opt/outline

- name: Создание директории для конфигурации Outline
  file:
    path: /opt/outline/persisted-state
    state: directory
    mode: 0755

- name: Установка Docker SDK для Python
  pip:
    name: docker
    state: present

- name: Получение сертификата для API Outline
  command: docker run --rm -v /opt/outline:/root outline/shadowbox:{{ outline_version }} node /worker/bin/server/get-certificate.js
  args:
    creates: /opt/outline/persisted-state/shadowbox-config.json

- name: Создание API конфигурации для Outline
  template:
    src: shadowbox-config.json.j2
    dest: /opt/outline/persisted-state/shadowbox-config.json
    mode: 0644
  notify: Перезапустить Outline

- name: Запуск контейнера Outline Server
  docker_container:
    name: shadowbox
    image: outline/shadowbox:{{ outline_version }}
    restart_policy: always
    network_mode: host
    volumes:
      - /opt/outline/persisted-state:/opt/outline/persisted-state
    env:
      SB_API_PORT: "{{ outline_api_port }}"
      SB_PUBLIC_IP: "{{ ansible_host }}"

- name: Создание директории для пользовательских скриптов
  file:
    path: /opt/outline/scripts
    state: directory
    mode: 0755

- name: Копирование API скрипта для интеграции с Django
  template:
    src: outline-api.js.j2
    dest: /opt/outline/scripts/outline-api.js
    mode: 0755

- name: Установка Node.js и npm
  apt:
    name:
      - nodejs
      - npm
    state: present

- name: Установка зависимостей для API скрипта
  npm:
    name: "{{ item }}"
    global: yes
  loop:
    - express
    - body-parser
    - axios

- name: Создание systemd сервиса для API Outline
  template:
    src: outline-api.service.j2
    dest: /etc/systemd/system/outline-api.service
    mode: 0644
  notify: Запустить API сервис

- name: Регистрация API в Kubernetes
  command: >
    kubectl -n vpn create configmap outline-server-{{ inventory_hostname }}
    --from-literal=api_url=http://{{ ansible_host }}:{{ outline_api_port }}
    --from-literal=server_location={{ location }}
  delegate_to: "{{ groups['k8s_master'][0] }}"
  args:
    creates: /tmp/outline-api-registered-{{ inventory_hostname }}
  register: api_registered

- name: Отметить регистрацию API
  file:
    path: /tmp/outline-api-registered-{{ inventory_hostname }}
    state: touch
  when: api_registered.changed
  delegate_to: "{{ groups['k8s_master'][0] }}"