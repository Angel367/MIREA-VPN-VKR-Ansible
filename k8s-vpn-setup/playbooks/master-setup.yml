---
- hosts: k8s_master
  become: yes
  vars_files:
    - vars/main.yml
  roles:
    - common
  tasks:
    - name: Инициализация кластера Kubernetes
      command: >
        kubeadm init 
        --apiserver-advertise-address={{ ansible_host }} 
        --pod-network-cidr={{ pod_network_cidr }}
        --service-cidr={{ service_cidr }}
      register: kubeadm_init
      args:
        creates: /etc/kubernetes/admin.conf

    - name: Создание конфигурационной директории для kubectl
      file:
        path: /root/.kube
        state: directory
        mode: 0755

    - name: Копирование конфигурации для kubectl
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /root/.kube/config
        remote_src: yes
        owner: root
        group: root
        mode: 0600

    - name: Установка сетевого плагина Calico
      command: kubectl apply -f https://docs.projectcalico.org/v3.25/manifests/calico.yaml
      args:
        creates: /etc/cni/net.d/calico-kubeconfig

    - name: Получение токена для присоединения рабочих узлов
      command: kubeadm token create --print-join-command
      register: join_command

    - name: Сохранение токена для рабочих узлов
      set_fact:
        join_command: "{{ join_command.stdout_lines[0] }}"

    - name: Создание namespace для VPN
      command: kubectl create namespace vpn
      args:
        creates: /tmp/vpn-namespace-created
      register: namespace_created

    - name: Отметить создание namespace
      file:
        path: /tmp/vpn-namespace-created
        state: touch
      when: namespace_created.changed

    - name: Создание директории для конфигурационных файлов
      file:
        path: /root/k8s-config
        state: directory
        mode: 0755

    - name: Создание StorageClass для локального хранилища
      copy:
        content: |
          apiVersion: storage.k8s.io/v1
          kind: StorageClass
          metadata:
            name: local-storage
          provisioner: kubernetes.io/no-provisioner
          volumeBindingMode: WaitForFirstConsumer
        dest: /root/k8s-config/local-storage.yml

    - name: Применение StorageClass
      command: kubectl apply -f /root/k8s-config/local-storage.yml